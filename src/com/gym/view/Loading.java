package com.gym.view;

/**
 * <b>Loading Screen for Gym Management System</b>
 *
 * <p>
 * The Loading class serves as an introductory screen for the application,
 * featuring a progress bar that simulates loading. Once the loading is
 * complete, the user is redirected to the Login screen.</p>
 *
 * <p>
 * Features include:</p>
 * <ul>
 * <li>Progress bar to indicate loading progress.</li>
 * <li>Smooth transition from the loading screen to the Login screen.</li>
 * <li>Custom loading image for better user experience.</li>
 * </ul>
 *
 * <p>
 * The loading process is handled in a separate thread to ensure smooth UI
 * operation without freezing the main thread.</p>
 *
 * <p>
 * Note: Exceptions during loading are caught and printed to the console for
 * debugging purposes.</p>
 *
 * @author Anish Shrestha 23048634
 */
public class Loading extends javax.swing.JFrame {

    /**
     * Creates new form Loading
     */
    public Loading() {
        initComponents();
        loading();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadingProgressBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(480, 230));
        setMaximumSize(new java.awt.Dimension(900, 525));
        setMinimumSize(new java.awt.Dimension(900, 525));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(loadingProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 855, 31));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gym/resource/loading.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Initializes a loading sequence with a progress bar and transitions to the
     * Login page.
     *
     * - A new thread is created to handle the progress bar update
     * asynchronously. - The progress bar value increments from 0 to 100 with a
     * delay of 30ms between updates. - Once the progress reaches 100%, the
     * Login window is displayed, and the current window is closed. - Any
     * exceptions encountered during the execution are caught and printed to the
     * console.
     *
     * This method ensures a smooth transition from the loading screen to the
     * Login page.
     */
    private void loading() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    for (int i = 0; i <= 100; i++) {
                        loadingProgressBar.setValue(i); // Updates the progress bar value
                        Thread.sleep(30); // Delays the code by 50ms
                    }

                    new Login().setVisible(true);

                    dispose();

                } catch (Exception e) {
                    e.printStackTrace(); // Print exception details
                }
            }
        }).start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loading().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar loadingProgressBar;
    // End of variables declaration//GEN-END:variables
}
